<Window
  x:Class="Minesweeper.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converter="clr-namespace:Minesweeper.Resources.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Minesweeper"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:Minesweeper.Models"
  x:Name="me"
  Title="扫雷"
  PreviewMouseDown="me_PreviewMouseDown"
  PreviewMouseUp="me_PreviewMouseUp"
  ResizeMode="CanMinimize"
  SizeToContent="WidthAndHeight"
  WindowStartupLocation="CenterScreen"
  mc:Ignorable="d">
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto" />
      <RowDefinition />
    </Grid.RowDefinitions>
    <Menu
      Background="White"
      BorderBrush="#f0f0f0"
      BorderThickness="0,0,0,1.5"
      FontSize="12">
      <MenuItem Header="游戏">
        <MenuItem Click="StandardDifficItem_Click" Header="初级" />
        <MenuItem Click="StandardDifficItem_Click" Header="中级" />
        <MenuItem Click="StandardDifficItem_Click" Header="高级" />
        <MenuItem Click="CustomMenuItem_Click" Header="自定义" />
        <Separator />
        <MenuItem
          Click="MarkMenuItem_Click"
          Header="标记(?)"
          IsChecked="{Binding UseMark}" />
        <Separator />
        <MenuItem Click="RankMenuItem_Click" Header="扫雷英雄榜" />
        <Separator />
        <MenuItem Click="ExitMenuItem_Click" Header="退出" />
      </MenuItem>
      <MenuItem Header="功能">
        <MenuItem Click="AllFlagMenuItem_Click" Header="全部插旗" />
        <MenuItem Click="CancelAllFlagMenuItem_Click" Header="全部去旗" />
        <Separator />
        <MenuItem Header="存档(失去排名)" />
        <MenuItem Header="读档" />
      </MenuItem>
      <MenuItem Header="帮助" />
    </Menu>

    <Grid
      Grid.Row="1"
      Margin="3,3,0,0"
      Background="#c0c0c0">
      <Grid.RowDefinitions>
        <RowDefinition Height="60" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid
        Grid.Row="0"
        Margin="8"
        Background="#c0c0c0">
        <Rectangle
          Width="2"
          HorizontalAlignment="Left"
          VerticalAlignment="stretch"
          Fill="#808080" />
        <Rectangle
          Height="2"
          HorizontalAlignment="stretch"
          VerticalAlignment="Top"
          Fill="#808080" />
        <Rectangle
          Width="2"
          HorizontalAlignment="Right"
          VerticalAlignment="stretch"
          Fill="#ffffff" />
        <Rectangle
          Height="2"
          HorizontalAlignment="stretch"
          VerticalAlignment="Bottom"
          Fill="#ffffff" />

        <Grid Margin="8">
          <TextBlock
            Width="40"
            Height="26"
            HorizontalAlignment="Left"
            Background="Black"
            FontFamily="{StaticResource LCD}"
            FontSize="22"
            Foreground="Red"
            TextAlignment="Center">
            <TextBlock.Text>
              <MultiBinding Converter="{x:Static converter:DifferenceConverter.Instance}">
                <Binding Path="BombCount" />
                <Binding Path="FlagCount" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <Button
            x:Name="faceButton"
            Width="28"
            Height="28"
            Padding="0"
            HorizontalAlignment="Center"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Click="Button_Click">
            <Button.Style>
              <Style TargetType="Button">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Border
                        BorderBrush="#808080"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Grid>
                          <Rectangle
                            x:Name="leftThickness"
                            Width="2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="stretch"
                            Fill="#ffffff" />
                          <Rectangle
                            x:Name="topThickness"
                            Height="2"
                            HorizontalAlignment="stretch"
                            VerticalAlignment="Top"
                            Fill="#ffffff" />
                          <Rectangle
                            x:Name="rightThickness"
                            Width="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="stretch"
                            Fill="#808080" />
                          <Rectangle
                            x:Name="buttomThickness"
                            Height="2"
                            HorizontalAlignment="stretch"
                            VerticalAlignment="Bottom"
                            Fill="#808080" />

                          <Image
                            x:Name="image"
                            Width="20"
                            Margin="-1,-1,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                            Source="{Binding DataContext.CurrFaceStatus, ElementName=me, Converter={x:Static converter:FaceStatusToImageConverter.Instance}}" />
                        </Grid>
                      </Border>

                      <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                          <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                          <Setter TargetName="topThickness" Property="Fill" Value="#808080" />
                          <Setter TargetName="rightThickness" Property="Width" Value="0" />
                          <Setter TargetName="buttomThickness" Property="Height" Value="0" />
                          <Setter TargetName="image" Property="Margin" Value="2,2,0,0" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Button.Style>
          </Button>
          <TextBlock
            Width="40"
            Height="26"
            HorizontalAlignment="Right"
            Background="Black"
            FontFamily="{StaticResource LCD}"
            FontSize="22"
            Foreground="Red"
            Text="{Binding TimeCost, StringFormat={}{0:D3}}"
            TextAlignment="Center" />
        </Grid>

      </Grid>
      <ListBox
        x:Name="listBox"
        Grid.Row="1"
        Margin="8"
        BorderThickness="0"
        IsEnabled="{Binding GameOver, Converter={x:Static converter:InverseBoolConvert.Instance}}"
        ItemsSource="{Binding CellList}"
        MouseLeave="listBox_MouseLeave"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        ScrollViewer.VerticalScrollBarVisibility="Disabled"
        SelectionChanged="listBox_SelectionChanged"
        VirtualizingStackPanel.VirtualizationMode="Recycling">
        <ListBox.Template>
          <ControlTemplate>
            <Grid>
              <ItemsPresenter Margin="3" />
              <Rectangle
                x:Name="leftThickness"
                Width="3"
                HorizontalAlignment="Left"
                VerticalAlignment="stretch"
                Fill="#808080" />
              <Rectangle
                x:Name="topThickness"
                Height="3.5"
                HorizontalAlignment="stretch"
                VerticalAlignment="Top"
                Fill="#808080" />
              <Rectangle
                x:Name="rightThickness"
                Width="3"
                HorizontalAlignment="Right"
                VerticalAlignment="stretch"
                Fill="#ffffff" />
              <Rectangle
                x:Name="buttomThickness"
                Height="3"
                HorizontalAlignment="stretch"
                VerticalAlignment="Bottom"
                Fill="#ffffff" />
            </Grid>
          </ControlTemplate>
        </ListBox.Template>
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel
              Width="{Binding Column, Converter={x:Static converter:ColumnToWidthConvert.Instance}}"
              d:Height="300"
              d:Width="400" />
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
        <ListBox.ItemContainerStyle>
          <Style TargetType="ListBoxItem">
            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                  <Grid MouseDown="ListBoxItem_MouseDown" MouseUp="ListBoxItem_MouseButtonUp">
                    <Border x:Name="Border" Background="#c0c0c0">
                      <ContentPresenter />
                    </Border>
                  </Grid>

                  <ControlTemplate.Triggers>
                    <!--  设置字体颜色  -->
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="0">
                      <Setter Property="Foreground" Value="Transparent" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="1">
                      <Setter Property="Foreground" Value="#0000ff" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="2">
                      <Setter Property="Foreground" Value="#008000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="3">
                      <Setter Property="Foreground" Value="#ff0000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="4">
                      <Setter Property="Foreground" Value="#000080" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="5">
                      <Setter Property="Foreground" Value="#800000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="6">
                      <Setter Property="Foreground" Value="#008080" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="7">
                      <Setter Property="Foreground" Value="#000000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="8">
                      <Setter Property="Foreground" Value="#808080" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Explode}" Value="True">
                      <Setter TargetName="Border" Property="Background" Value="Red" />
                    </DataTrigger>


                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
              <Setter.Value>
                <DataTemplate>
                  <Grid>
                    <Grid
                      Width="13"
                      Height="13"
                      Margin="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                      <TextBlock
                        FontFamily="MoolBoran"
                        FontSize="14"
                        FontWeight="UltraBold"
                        Text="{Binding AroundBombNum}"
                        TextAlignment="Center"
                        Visibility="{Binding IsOpened, Converter={StaticResource BoolToVisConverter}}" />
                      <Image RenderOptions.BitmapScalingMode="NearestNeighbor">
                        <Image.Style>
                          <Style TargetType="Image">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding CellMark}" Value="{x:Static model:CellMark.Flag}">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>

                              <DataTrigger Binding="{Binding CellMark}" Value="{x:Static model:CellMark.QuestionMark}">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>

                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding IsBomb}" Value="True" />
                                  <Condition Binding="{Binding DataContext.GameOver, ElementName=me}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                              </MultiDataTrigger>

                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding CellMark}" Value="{x:Static model:CellMark.None}" />
                                  <Condition Binding="{Binding DataContext.GameOver, ElementName=me}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Hidden" />
                              </MultiDataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Image.Style>
                        <Image.Source>
                          <MultiBinding Converter="{x:Static converter:CellShowImageConverter.Instance}">
                            <Binding Path="CellMark" />
                            <Binding Path="IsBomb" />
                            <Binding ElementName="me" Path="DataContext.GameOver" />
                          </MultiBinding>
                        </Image.Source>
                      </Image>
                    </Grid>
                    <Rectangle
                      x:Name="leftThickness"
                      Width="2"
                      HorizontalAlignment="Left"
                      VerticalAlignment="stretch"
                      Fill="#ffffff" />
                    <Rectangle
                      x:Name="topThickness"
                      Height="2"
                      HorizontalAlignment="stretch"
                      VerticalAlignment="Top"
                      Fill="#ffffff" />
                    <Rectangle
                      x:Name="rightThickness"
                      Width="2"
                      HorizontalAlignment="Right"
                      VerticalAlignment="stretch"
                      Fill="#808080" />
                    <Rectangle
                      x:Name="buttomThickness"
                      Height="2"
                      HorizontalAlignment="stretch"
                      VerticalAlignment="Bottom"
                      Fill="#808080" />
                  </Grid>
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsOpened}" Value="True">
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="topThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="rightThickness" Property="Fill" Value="Transparent" />
                      <Setter TargetName="buttomThickness" Property="Fill" Value="Transparent" />
                      <Setter TargetName="leftThickness" Property="Width" Value="1" />
                      <Setter TargetName="topThickness" Property="Height" Value="1" />
                    </DataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Pressed}" Value="True" />
                        <Condition Binding="{Binding CellMark, Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="topThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="rightThickness" Property="Fill" Value="Transparent" />
                      <Setter TargetName="buttomThickness" Property="Fill" Value="Transparent" />
                      <Setter TargetName="leftThickness" Property="Width" Value="1" />
                      <Setter TargetName="topThickness" Property="Height" Value="1" />
                    </MultiDataTrigger>


                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag, Converter={x:Static converter:EnumFlagConverter.Instance}, ConverterParameter={x:Static model:CellFlag.Left}}" Value="True" />
                        <Condition Binding="{Binding CellMark, Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag, Converter={x:Static converter:EnumFlagConverter.Instance}, ConverterParameter={x:Static model:CellFlag.Top}}" Value="True" />
                        <Condition Binding="{Binding CellMark, Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag, Converter={x:Static converter:EnumFlagConverter.Instance}, ConverterParameter={x:Static model:CellFlag.Right}}" Value="True" />
                        <Condition Binding="{Binding CellMark, Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag, Converter={x:Static converter:EnumFlagConverter.Instance}, ConverterParameter={x:Static model:CellFlag.Bottom}}" Value="True" />
                        <Condition Binding="{Binding CellMark, Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                    </MultiDataTrigger>

                    <DataTrigger Binding="{Binding Explode}" Value="True">
                      <Setter TargetName="leftThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="topThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="rightThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="buttomThickness" Property="Fill" Value="#808080" />
                      <Setter TargetName="leftThickness" Property="Width" Value=".1" />
                      <Setter TargetName="topThickness" Property="Height" Value=".1" />
                      <Setter TargetName="rightThickness" Property="Width" Value=".1" />
                      <Setter TargetName="buttomThickness" Property="Height" Value=".1" />
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ListBox.ItemContainerStyle>
      </ListBox>
    </Grid>
  </Grid>

</Window>
