<Window x:Name="me" x:Class="Minesweeper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:Minesweeper.Models"
        xmlns:converter="clr-namespace:Minesweeper.Resources.Converters"
        xmlns:local="clr-namespace:Minesweeper"
        mc:Ignorable="d"
        Title="扫雷" Height="447" Width="611" WindowStartupLocation="CenterScreen"
        PreviewMouseDown="me_PreviewMouseDown" PreviewMouseUp="me_PreviewMouseUp">
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <Menu FontSize="12" Background="White" BorderThickness="0 0 0 1.5" BorderBrush="#f0f0f0">
      <MenuItem Header="游戏">
        <MenuItem Header="初级"/>
        <MenuItem Header="中级"/>
        <MenuItem Header="高级"/>
        <MenuItem Header="自定义" Click="CustomMenuItem_Click"/>
        <Separator/>
        <MenuItem Header="标记(?)"/>
        <Separator/>
        <MenuItem Header="扫雷英雄榜"/>
        <Separator/>
        <MenuItem Header="退出"/>

      </MenuItem>
      <MenuItem Header="帮助"/>
      <MenuItem Header="作弊"/>
    </Menu>

    <Grid Grid.Row="1" Margin="3 3 0 0" Background="#c0c0c0">
      <Grid.RowDefinitions>
        <RowDefinition Height="60"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <Grid Background="#c0c0c0" Margin="8" Grid.Row="0">
        <Rectangle Fill="#808080" Width="2" VerticalAlignment="stretch" HorizontalAlignment="Left"/>
        <Rectangle Fill="#808080" Height="2" VerticalAlignment="Top" HorizontalAlignment="stretch"/>
        <Rectangle Fill="#ffffff" Width="2" VerticalAlignment="stretch" HorizontalAlignment="Right"/>
        <Rectangle Fill="#ffffff" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="stretch"/>

        <Grid Margin="8">
          <TextBlock Height="26" Width="40" FontSize="22" TextAlignment="Center" FontFamily="{StaticResource LCD}"
                 Background="Black" Foreground="Red" HorizontalAlignment="Left" Text="{Binding BombCount,StringFormat={}{0:D3}}"/>
          <Button x:Name="faceButton" HorizontalAlignment="Center" Width="28" Height="28" Click="Button_Click" Padding="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Button.Style>
              <Style TargetType="Button">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Border BorderThickness="1" BorderBrush="#808080" CornerRadius="2">
                        <Grid>
                          <Rectangle x:Name="leftThickness" Fill="#ffffff" Width="2" VerticalAlignment="stretch" HorizontalAlignment="Left"/>
                          <Rectangle x:Name="topThickness" Fill="#ffffff" Height="2" VerticalAlignment="Top" HorizontalAlignment="stretch"/>
                          <Rectangle x:Name="rightThickness"  Fill="#808080" Width="2" VerticalAlignment="stretch" HorizontalAlignment="Right"/>
                          <Rectangle x:Name="buttomThickness" Fill="#808080" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="stretch"/>

                          <Image x:Name="image" Width="20" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center"
                            Source="{Binding DataContext.CurrFaceStatus,ElementName=me,Converter={x:Static converter:FaceStatusToImageConverter.Instance}}"/>
                        </Grid>
                      </Border>

                      <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                          <Setter TargetName="leftThickness" Property="Fill" Value="#808080"/>
                          <Setter TargetName="topThickness" Property="Fill" Value="#808080"/>
                          <Setter TargetName="rightThickness" Property="Width" Value="0"/>
                          <Setter TargetName="buttomThickness" Property="Height" Value="0"/>
                          <Setter TargetName="image" Property="Margin" Value="2 2 0 0"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Button.Style>
          </Button>
          <TextBlock Height="26" Width="40" FontSize="22" TextAlignment="Center" FontFamily="{StaticResource LCD}"
                 Background="Black" Foreground="Red" HorizontalAlignment="Right" Text="000"/>
        </Grid>

      </Grid>
      <ListBox Grid.Row="1" MouseLeave="listBox_MouseLeave" Margin="8" x:Name="listBox" ItemsSource="{Binding CellList}"
             ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"
             SelectionChanged="listBox_SelectionChanged" IsEnabled="{Binding GameOver,Converter={x:Static converter:InverseBoolConvert.Instance}}"
             BorderThickness="0">
        <ListBox.Template>
          <ControlTemplate>
            <Grid>
              <ItemsPresenter Margin="3"/>
              <Rectangle x:Name="leftThickness" Fill="#808080" Width="3" VerticalAlignment="stretch" HorizontalAlignment="Left"/>
              <Rectangle x:Name="topThickness" Fill="#808080" Height="3.5" VerticalAlignment="Top" HorizontalAlignment="stretch"/>
              <Rectangle x:Name="rightThickness" Fill="#ffffff" Width="3" VerticalAlignment="stretch" HorizontalAlignment="Right"/>
              <Rectangle x:Name="buttomThickness" Fill="#ffffff" Height="3" VerticalAlignment="Bottom" HorizontalAlignment="stretch"/>
            </Grid>
          </ControlTemplate>
        </ListBox.Template>
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=ListBox,AncestorLevel=1}}"/>
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
        <ListBox.ItemContainerStyle>
          <Style TargetType="ListBoxItem">
            <Setter Property="Width" Value="{Binding ActualHeight,RelativeSource={RelativeSource Mode=Self}}"/>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                  <Grid MouseUp="ListBoxItem_MouseButtonUp"
                      MouseDown="ListBoxItem_MouseDown">
                    <Border x:Name="Border" Background="#c0c0c0">
                      <ContentPresenter/>
                    </Border>
                  </Grid>

                  <ControlTemplate.Triggers>
                    <!--设置字体颜色-->
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="0">
                      <Setter Property="Foreground" Value="Transparent"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="1">
                      <Setter Property="Foreground" Value="#0000ff"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="2">
                      <Setter Property="Foreground" Value="#008000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="3">
                      <Setter Property="Foreground" Value="#ff0000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="4">
                      <Setter Property="Foreground" Value="#000080"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="5">
                      <Setter Property="Foreground" Value="#800000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="6">
                      <Setter Property="Foreground" Value="#008080"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="7">
                      <Setter Property="Foreground" Value="#000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AroundBombNum}" Value="8">
                      <Setter Property="Foreground" Value="#808080"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Explode}" Value="True">
                      <Setter TargetName="Border" Property="Background" Value="Red"/>
                    </DataTrigger>


                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
              <Setter.Value>
                <DataTemplate>
                  <Grid>
                    <Grid Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Height="13" Width="13">
                      <TextBlock Text="{Binding AroundBombNum}"
                         FontFamily="MoolBoran" FontWeight="UltraBold"  FontSize="14" TextAlignment="Center"
                         Visibility="{Binding IsOpened,Converter={StaticResource BoolToVisConverter}}"/>
                      <Image RenderOptions.BitmapScalingMode="NearestNeighbor">
                        <Image.Style>
                          <Style TargetType="Image">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding CellMark}" Value="{x:Static model:CellMark.Flag}">
                                <Setter Property="Visibility" Value="Visible"/>
                              </DataTrigger>

                              <DataTrigger Binding="{Binding CellMark}" Value="{x:Static model:CellMark.QuestionMark}">
                                <Setter Property="Visibility" Value="Visible"/>
                              </DataTrigger>

                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding IsBomb}" Value="True"/>
                                  <Condition Binding="{Binding DataContext.GameOver,ElementName=me}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                              </MultiDataTrigger>

                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding CellMark}" Value="{x:Static model:CellMark.None}"/>
                                  <Condition Binding="{Binding DataContext.GameOver,ElementName=me}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Hidden"/>
                              </MultiDataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Image.Style>
                        <Image.Source>
                          <MultiBinding Converter="{x:Static converter:CellShowImageConverter.Instance}">
                            <Binding Path="CellMark"/>
                            <Binding Path="IsBomb"/>
                            <Binding Path="DataContext.GameOver" ElementName="me"/>
                          </MultiBinding>
                        </Image.Source>
                      </Image>
                    </Grid>
                    <Rectangle x:Name="leftThickness" Fill="#ffffff" Width="2" VerticalAlignment="stretch" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="topThickness" Fill="#ffffff" Height="2" VerticalAlignment="Top" HorizontalAlignment="stretch"/>
                    <Rectangle x:Name="rightThickness" Fill="#808080" Width="2" VerticalAlignment="stretch" HorizontalAlignment="Right"/>
                    <Rectangle x:Name="buttomThickness" Fill="#808080" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="stretch"/>
                  </Grid>
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsOpened}" Value="True">
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="topThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="rightThickness" Value="Transparent"/>
                      <Setter Property="Fill" TargetName="buttomThickness" Value="Transparent"/>
                      <Setter Property="Width" TargetName="leftThickness" Value="1"/>
                      <Setter Property="Height" TargetName="topThickness" Value="1"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Pressed}" Value="True"/>
                        <Condition Binding="{Binding CellMark,Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True"/>
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="topThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="rightThickness" Value="Transparent"/>
                      <Setter Property="Fill" TargetName="buttomThickness" Value="Transparent"/>
                      <Setter Property="Width" TargetName="leftThickness" Value="1"/>
                      <Setter Property="Height" TargetName="topThickness" Value="1"/>
                    </MultiDataTrigger>


                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag,Converter={x:Static converter:EnumFlagConverter.Instance},ConverterParameter={x:Static model:CellFlag.Left}}"
                               Value="True"/>
                        <Condition Binding="{Binding CellMark,Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True"/>
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag,Converter={x:Static converter:EnumFlagConverter.Instance},ConverterParameter={x:Static model:CellFlag.Top}}"
                               Value="True"/>
                        <Condition Binding="{Binding CellMark,Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True"/>
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag,Converter={x:Static converter:EnumFlagConverter.Instance},ConverterParameter={x:Static model:CellFlag.Right}}"
                               Value="True"/>
                        <Condition Binding="{Binding CellMark,Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True"/>
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Flag,Converter={x:Static converter:EnumFlagConverter.Instance},ConverterParameter={x:Static model:CellFlag.Bottom}}"
                               Value="True"/>
                        <Condition Binding="{Binding CellMark,Converter={x:Static converter:CellMarkNotFlagConvert.Instance}}" Value="True"/>
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                    </MultiDataTrigger>

                    <DataTrigger Binding="{Binding Explode}" Value="True">
                      <Setter Property="Fill" TargetName="leftThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="topThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="rightThickness" Value="#808080"/>
                      <Setter Property="Fill" TargetName="buttomThickness" Value="#808080"/>
                      <Setter Property="Width" TargetName="leftThickness" Value=".1"/>
                      <Setter Property="Height" TargetName="topThickness" Value=".1"/>
                      <Setter Property="Width" TargetName="rightThickness" Value=".1"/>
                      <Setter Property="Height" TargetName="buttomThickness" Value=".1"/>
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ListBox.ItemContainerStyle>
      </ListBox>
    </Grid>
  </Grid>

</Window>
